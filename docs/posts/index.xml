<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on LG Jamstack</title>
    <link>/posts/</link>
    <description>LG Jamstack (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Sep 2020 11:59:09 -0700</lastBuildDate>
    
    <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Installing Hugo</title>
      <link>/posts/00/</link>
      <pubDate>Sun, 27 Sep 2020 11:59:09 -0700</pubDate>
      
      <guid>/posts/00/</guid>
      <description>&lt;h1 id=&#34;installation&#34;&gt;Installation&lt;/h1&gt;
&lt;p&gt;Let&amp;rsquo;s get started with the JAMStack by building our very own static site. We&amp;rsquo;ll be using &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, a static site generator (piece of software that turns the markdown into HTML to display), to create our site.&lt;/p&gt;
&lt;p&gt;This guide assumes a basic knowledge of the command line and HTML. We&amp;rsquo;ll be interacting with our terminal for most of this tutorial, so you may want to read up on that if unfamiliar.&lt;/p&gt;
&lt;p&gt;This guide also assumes you have git working on your system, and have a basic understanding of that. If not, navigate to &lt;a href=&#34;https://git-scm.com&#34;&gt;git-scm.com&lt;/a&gt; and follow the installation instructions there.&lt;/p&gt;
&lt;p&gt;First, we&amp;rsquo;ll have to install Hugo. Hugo is written in Go and provides binaries for most operating systems, so navigate to &lt;a href=&#34;https://gohugo.io/getting-started/installing&#34;&gt;https://gohugo.io/getting-started/installing&lt;/a&gt; and follow the instructions to install.&lt;/p&gt;
&lt;p&gt;Some quick examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On macOS or Linux with Homebrew:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;On Windows with Chocolatey:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;choco install hugo -confirm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;On Ubuntu/Debian:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo apt-get install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;On Arch:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo pacman -Syu hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If your OS isn&amp;rsquo;t in the list above, it&amp;rsquo;s likely in the &lt;a href=&#34;https://gohugo.io/getting-started/installing&#34;&gt;Hugo installing guide&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Skeleton ðŸ’€</title>
      <link>/posts/01/</link>
      <pubDate>Sun, 27 Sep 2020 11:58:09 -0700</pubDate>
      
      <guid>/posts/01/</guid>
      <description>&lt;h1 id=&#34;generating-the-skeleton&#34;&gt;Generating the Skeleton&lt;/h1&gt;
&lt;p&gt;Hugo requires a very specific structure for its generation. After installing Hugo, navigate to your desired directory and run &lt;code&gt;hugo site new ./&lt;/code&gt; in your command line. You&amp;rsquo;ll get something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;.
â”œâ”€â”€ archetypes
â”‚Â Â  â””â”€â”€ default.md
â”œâ”€â”€ config.toml
â”œâ”€â”€ content
â”œâ”€â”€ data
â”œâ”€â”€ layouts
â”œâ”€â”€ static
â””â”€â”€ themes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;as output.&lt;/p&gt;
&lt;p&gt;While we&amp;rsquo;re here, I&amp;rsquo;m also going to introduce the &lt;code&gt;hugo server&lt;/code&gt; command. Run this at any time to properly preview your site at &lt;code&gt;localhost:1313&lt;/code&gt; (default port is 1313, may change if you have preconfigured Hugo another way). If you run it now, you&amp;rsquo;re not going to get anything especially interesting, since we don&amp;rsquo;t have any content or a theme yet.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Adding a theme</title>
      <link>/posts/02/</link>
      <pubDate>Sun, 27 Sep 2020 11:57:09 -0700</pubDate>
      
      <guid>/posts/02/</guid>
      <description>&lt;h1 id=&#34;adding-a-theme&#34;&gt;Adding a theme&lt;/h1&gt;
&lt;p&gt;Hugo allows us to create our own themes, but that requires a knowledge of HTML and CSS and quite a bit of time. We&amp;rsquo;ll go over how to tweak the theme a bit later on, but let&amp;rsquo;s just use a premade one for now.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re going to be using the &lt;a href=&#34;https://themes.gohugo.io/hugo-theme-anubis/&#34;&gt;Anubis&lt;/a&gt; theme for our basic site today. This is a premade theme by Dmitry Kolosov - we&amp;rsquo;ll be editing it and configuring it throughout the rest of this tutorial.&lt;/p&gt;
&lt;p&gt;Inside your Hugo site folder, run &lt;code&gt;git init&lt;/code&gt; to initiate a new repository, and &lt;code&gt;git submodule add https://github.com/mitrichius/hugo-theme-anubis.git themes/anubis&lt;/code&gt; to add the theme as a submodule in your themes/anubis directory. The themes directory is where Hugo reads all themes from, so don&amp;rsquo;t edit that quite yet.&lt;/p&gt;
&lt;p&gt;If you run &lt;code&gt;hugo server&lt;/code&gt;, you &lt;em&gt;still&lt;/em&gt; won&amp;rsquo;t have any cool theming. This is because we haven&amp;rsquo;t added it in our config file yet. Rename your &lt;code&gt;config.toml&lt;/code&gt; file to a &lt;code&gt;config.yaml&lt;/code&gt;, and delete its contents.&lt;/p&gt;
&lt;p&gt;Copy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;languageCode&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;en-us&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;baseUrl&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Anubis&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;theme&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;anubis&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;paginate&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;menu&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;main&lt;/span&gt;:
  - &lt;span style=&#34;color:#66d9ef&#34;&gt;identifier&lt;/span&gt;: archive
    &lt;span style=&#34;color:#66d9ef&#34;&gt;name&lt;/span&gt;: Archive
    &lt;span style=&#34;color:#66d9ef&#34;&gt;title&lt;/span&gt;: Archive
    &lt;span style=&#34;color:#66d9ef&#34;&gt;url&lt;/span&gt;: /posts/
    &lt;span style=&#34;color:#66d9ef&#34;&gt;weight&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;params&lt;/span&gt;:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;dateFormat&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2006-01-02&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;style&lt;/span&gt;: light-without-switcher
  &lt;span style=&#34;color:#66d9ef&#34;&gt;readMore&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;into that file.&lt;/p&gt;
&lt;p&gt;Now, when you run &lt;code&gt;hugo server&lt;/code&gt;, you&amp;rsquo;ll be able to finally see something!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configuring a theme</title>
      <link>/posts/04/</link>
      <pubDate>Sun, 27 Sep 2020 11:56:09 -0700</pubDate>
      
      <guid>/posts/04/</guid>
      <description>&lt;h1 id=&#34;theme-configuration&#34;&gt;Theme Configuration&lt;/h1&gt;
&lt;p&gt;Remember that config.yaml file that we edited in step 2? We&amp;rsquo;ll be returning to that file to edit some features of the Anubis theme. Most themes have a GitHub repo that you can turn to for help with documentation and understanding what feature flags are available.&lt;/p&gt;
&lt;p&gt;The first thing we&amp;rsquo;ll tweak is the title of our site. Open your config.yaml file, and change the:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Anubis&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;line to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Whatever you want!&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that the quotes are important here - that&amp;rsquo;s a part of YAML syntax that is required. Put whatever you want to appear in the header on the left in the title slot.&lt;/p&gt;
&lt;p&gt;Next, let&amp;rsquo;s add a dark/light theme switcher. Normally, we&amp;rsquo;d have to add quite a bit of CSS variable magic and JS for this, but Anubis comes with this built in. Navigate under &lt;code&gt;params&lt;/code&gt;, and you&amp;rsquo;ll find a line that reads:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;style&lt;/span&gt;: light-without-switcher
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can change this to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;style&lt;/span&gt;: auto
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;for it to recognize user themes and to add a switcher.&lt;/p&gt;
&lt;p&gt;We can also update the author copyright bit by adding:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;author&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Your name&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;description&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Site description&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;under &lt;code&gt;params&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And lastly, let&amp;rsquo;s learn how to edit and use that frontmatter from hello-world.md. Open that file, and add:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;favorite&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;between the two &lt;code&gt;---&lt;/code&gt; lines.&lt;/p&gt;
&lt;p&gt;When you finally preview your site with &lt;code&gt;hugo server&lt;/code&gt;, you can see that there&amp;rsquo;s a new title, a theme switcher, and a star next to your favourited post.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Creating content</title>
      <link>/posts/03/</link>
      <pubDate>Sun, 27 Sep 2020 11:56:09 -0700</pubDate>
      
      <guid>/posts/03/</guid>
      <description>&lt;h1 id=&#34;writing-content&#34;&gt;Writing Content&lt;/h1&gt;
&lt;p&gt;Every blog and website needs to have some content, so let&amp;rsquo;s cover how to do that.&lt;/p&gt;
&lt;p&gt;Inside your Hugo folder, run &lt;code&gt;hugo new posts/hello-world.md&lt;/code&gt;. This&amp;rsquo;ll create a new folder called posts in your content directory, and put a file called hello-world.md in it.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re not familiar with Markdown, it&amp;rsquo;s a markup language that&amp;rsquo;s commonly used to write and create rich content, and it&amp;rsquo;s the language that Hugo uses. It&amp;rsquo;s not very complicated, but here are some main points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt; is a header, or H1 if you&amp;rsquo;re familiar with HTML.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;##&lt;/code&gt; is a subheader, or H2. These go all the way down to &lt;code&gt;######&lt;/code&gt;, or H6.&lt;/li&gt;
&lt;li&gt;You write content just like you normally do. Space paragraphs out with a newline in between, and create a line break with two spaces.&lt;/li&gt;
&lt;li&gt;Add lists by prefixing items with &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;1.&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; produces an unordered list, while &lt;code&gt;1.&lt;/code&gt; creates an ordered list. (For the ordered list, prefix the next items with &lt;code&gt;2.&lt;/code&gt;, &lt;code&gt;3.&lt;/code&gt;, etc.)&lt;/li&gt;
&lt;li&gt;Add links by using the &lt;code&gt;[text](link)&lt;/code&gt; syntax, and images with &lt;code&gt;![alt text](path to image)&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Add code by surrounding a block in three backticks ```, or inline with one `.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More information can be found on this &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;great cheatsheet by Adam Pritchard&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That being said, you&amp;rsquo;ll notice that when editing the file that there&amp;rsquo;s some information automatically added. Don&amp;rsquo;t worry about that for now - that&amp;rsquo;s &lt;em&gt;frontmatter&lt;/em&gt;, or metadata, in other words. It controls some fine-tuning customizations we&amp;rsquo;ll investigate soon.&lt;/p&gt;
&lt;p&gt;One example of this frontmatter is the line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;draft&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;which makes it so that &lt;code&gt;hugo server&lt;/code&gt; won&amp;rsquo;t actually build your files. Change this to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;draft&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;so &lt;code&gt;hugo server&lt;/code&gt; knows to build these files.&lt;/p&gt;
&lt;p&gt;For now, edit your hello-world.md file, and once done, try previewing your site with &lt;code&gt;hugo server&lt;/code&gt;. Navigate to &lt;code&gt;localhost:1313/posts/hello-world/&lt;/code&gt;, and it should appear!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>More on the structure</title>
      <link>/posts/05/</link>
      <pubDate>Sun, 27 Sep 2020 11:55:09 -0700</pubDate>
      
      <guid>/posts/05/</guid>
      <description>&lt;h1 id=&#34;folder-structure&#34;&gt;Folder Structure&lt;/h1&gt;
&lt;p&gt;Before we start finishing up our site, I&amp;rsquo;m going to go more into detail about each of the folders you&amp;rsquo;ll find, and what they do, so if you choose to edit your site more, you&amp;rsquo;ll understand how to do so. If you&amp;rsquo;re not interested in editing more, feel free to skip this page.&lt;/p&gt;
&lt;h2 id=&#34;content&#34;&gt;Content&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s start with the content folder. You already know that this is where all your posts and markdown go, but you might not know that you can also put HTML in here. I wouldn&amp;rsquo;t advise doing so, but it&amp;rsquo;s possible. As well, you can specify custom &lt;em&gt;layouts&lt;/em&gt; for each of your markdown posts, which are taken from your theme.&lt;/p&gt;
&lt;h2 id=&#34;theme&#34;&gt;Theme&lt;/h2&gt;
&lt;p&gt;The theme folder is found under &lt;code&gt;themes/[theme name]&lt;/code&gt;. Inside, you&amp;rsquo;ll find a lot of subfolders, but for now, we&amp;rsquo;re interested in layouts. In layouts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;_default are Hugo-generated files that tell the theme where to put content, and if there&amp;rsquo;s a header or footer involved.&lt;/li&gt;
&lt;li&gt;partials contain Hugo partials, which are a very powerful tool. In here, we can put HTML snippets, and reference them in our markdown with &lt;code&gt;{{ partial [path]/[name].html . }}&lt;/code&gt;. Think of these as header or footer files, for example.&lt;/li&gt;
&lt;li&gt;shortcodes contains Hugo shortcodes, which are little snippets, kind of like a partial, except these usually bring outside functionality into Hugo, such as the Twitter or YouTube shortcodes.&lt;/li&gt;
&lt;li&gt;404.html and index.html are mostly self explanatory - 404 is for pages that don&amp;rsquo;t exist, and index.html shows the default landing page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we go back up one directory, we&amp;rsquo;ll find the static directory. This is where CSS and JS go, as well as any theme assets.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll also find an archetypes directory in themes - this controls the default markdown added when you run &lt;code&gt;hugo new posts/xyz.md&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;static&#34;&gt;Static&lt;/h2&gt;
&lt;p&gt;This is where site static files go, like perhaps a logo image. You can override CSS and JS here as well.&lt;/p&gt;
&lt;h2 id=&#34;public&#34;&gt;Public&lt;/h2&gt;
&lt;p&gt;This is generally where the site build files go, after being processed by Hugo. This is overrideable in config.yaml by adding the line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;publishDir&lt;/span&gt;: ./foldername
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you&amp;rsquo;re interested in learning more about theming and Hugo template variables, I highly recommend referencing the &lt;a href=&#34;https://gohugo.io/documentation/&#34;&gt;Hugo docs&lt;/a&gt;. It&amp;rsquo;s a comprehensive resource for anyone looking to customize a theme or build one from scratch, and is very clear.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deploying</title>
      <link>/posts/06/</link>
      <pubDate>Sun, 27 Sep 2020 11:54:09 -0700</pubDate>
      
      <guid>/posts/06/</guid>
      <description>&lt;h1 id=&#34;publishing&#34;&gt;Publishing&lt;/h1&gt;
&lt;p&gt;You can&amp;rsquo;t just upload the Hugo files as they are to GitHub or Netlify for them to show up - we have to use something called a build process. This takes all the files and puts them through Hugo to churn out the HTML and CSS that we need.&lt;/p&gt;
&lt;p&gt;This building is why we call Hugo a &lt;em&gt;static site generator&lt;/em&gt; - it generates static sites which can go on a CDN instead of a more costly server.&lt;/p&gt;
&lt;p&gt;Run &lt;code&gt;hugo&lt;/code&gt; to build all the files. Your finished files will end up in the &lt;code&gt;public&lt;/code&gt; directory by default.&lt;/p&gt;
&lt;h2 id=&#34;github-publishing&#34;&gt;GitHub Publishing&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;d like to publish your site on GitHub Pages for example, you can simply drag and drop the files in the public directory in. If you choose to push the whole Hugo repository onto GitHub, you may want to change the publishDir to something like &lt;code&gt;docs/&lt;/code&gt;, which GitHub also offers as a GH Pages source.&lt;/p&gt;
&lt;p&gt;Alternatively, you can set the publishDir to another folder outside of the Hugo folder, such as &lt;code&gt;../hugo-build&lt;/code&gt;, and initialize that as a new repository to push to GitHub.&lt;/p&gt;
&lt;p&gt;Congratulations - you&amp;rsquo;ve just built your very own static site, and it didn&amp;rsquo;t even take that long. Static sites and the JAMStack are increasingly prevalent technologies, and they&amp;rsquo;re likely to influence the web greatly in the future.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;This workshop was created by &lt;a href=&#34;https://kewbi.sh&#34;&gt;Emilie Ma&lt;/a&gt; for the Liquid Galaxy GCIers podcast.&lt;/p&gt;
&lt;p&gt;The demo site is available at &lt;a href=&#34;https://kewbi.sh/lg-jamstack&#34;&gt;kewbi.sh/lg-jamstack&lt;/a&gt;.&lt;br&gt;
The GitHub source is available at &lt;a href=&#34;https://github.com/kewbish/lg-jamstack&#34;&gt;kewbish/lg-jamstack&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>